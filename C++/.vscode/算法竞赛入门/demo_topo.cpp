
/*
#??????
?????????????????u,v(u<v)????????
??v??????u?????
?????????????????§Ó????????§Ö??????????????§³?????
???????????????
#???????????
??????????????????????????????????????¦Â---->dfs
?????????????§Ô??????????????????????????????§Û????
*/
#include <iostream>
#include <stack>
#include <string.h>
using namespace std;

/*???*/
stack<int> ans;

const int maxn=1000;    //????????
const int maxm=1000;    //???????

int n,m;    //n?????m????? 
int is_v[maxn]; //??????????????????????
int G[maxn][maxn];  //???u v??????

//????u???????????›Ô??? 
bool dfs(int u)
{
    is_v[u]=-1; //???u???????
    for(int v=0;v<n;v++)
    {
        if(G[u][v])
        {
            if(is_v[v]<0)   //????§Ý???
            {
                return false;
            }
            if((is_v[v]==0)&&(dfs(v)==false))
            {
                return false;
            }
        }
    }
    is_v[u]=1;
    ans.push(u);
    return true;
}

bool topo()
{
    memset(is_v,0,sizeof(is_v));
    for(int u=0;u<n;u++)
    {
        if(is_v[u]==0)
        {
            if(dfs(u)==false)
                return false;
        }
    }
    return true;
}

/*????????
4
3
3 2
3 1
1 4

2
2
1 2
2 1
*/

int main()
{
    cin>>n>>m;
    memset(G,0,sizeof(G));
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;  //???????a<b
        G[a-1][b-1]=1;
    }
    //????
    if(topo()==false)
    {
        cout<<"???? ?§Ý?¡¤"<<endl;
    }
    else
    {
        //?????ans
        while(ans.empty()==0)
        {
            cout<<ans.top()+1<<" ";
            ans.pop();
        }
    }
    return 0;
}
